// The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
// Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?


// Set series number to a string to avoid infinity issue
var series = '73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991256071760605886116467109405077541002256983155200055935729725716362695618826704282524836008232575304207529634509999';

var _ = require('lodash');

function largestProduct(num){
  var nums = num.split('');
  var greatest = 0;
  var digits = undefined;

  for(var i=0; i<nums.length-12; i++){
    var slice = nums.slice(i, i+13);
    if(convertToIntAndMultiply(slice) > greatest){
      greatest = convertToIntAndMultiply(slice);
      digits = slice
    }
  }

  return [greatest, digits];
};

function convertToIntAndMultiply(stringInts){
  var ints = [];
  _.each(stringInts, function(str){
    ints.push(parseInt(str));
  });

  return _.reduce(ints, function(tail, num){ return tail * num; }, 1);
};
